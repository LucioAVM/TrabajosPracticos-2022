/*
 * parser.c
 *
 *  Created on: 9 jun. 2022
 *      Author: UGIO
 */
#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Pasajero.h"
#include "tipoPasajero.h"

/** \brief Parsea los datos los datos de los pasajeros desde el archivo data.csv (modo texto).
 *
 * \param path char*
 * \param pArrayListPassenger LinkedList*
 * \return int
 *
 */

int parser_PasajeroDesdeTexto(FILE* pArchivo , LinkedList* pArrayListPassenger)
{
	char id[5];
	char nombre[50];
	char apellido[50];
	char precio[6];
	char tipoPasajero[30];
	char codigoVuelo[7];
	char isEmpty[20];

	ePasajero aux;
	int numeroScanf[50];

	do{
		numeroScanf = fscanf(pArchivo,"%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^\n]/n",id,nombre,apellido,precio,codigoVuelo,tipoPasajero,isEmpty);
		if(numeroScanf == 7)
		{
			aux.id = atoi(id);
			strncpy(aux.nombre,nombre,sizeof(aux.nombre));
			strncpy(aux.apellido,apellido,sizeof(aux.apellido));
			aux.precio = atoi(precio);
			strncpy(aux.codigoVuelo,codigoVuelo,sizeof(aux.codigoVuelo));

			parsearPasajeroAEstructura(tipoPasajero, aux, estructuraTipoPasajero);

			parsearIsEmptyPasajeroAEstructura(isEmpty, aux, estructuraIsEmpty);

			ll_add(pArrayListPassenger, aux);
		}
	}while();

	return 1;
}

/** \brief Parsea los datos los datos de los pasajeros desde el archivo data.csv (modo binario).
 *
 * \param path char*
 * \param pArrayListPassenger LinkedList*
 * \return int
 *
 */
int parser_PasajeroDesdeBinadio(FILE* pFile , LinkedList* pArrayListPassenger)
{

    return 1;
}
